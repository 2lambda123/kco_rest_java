/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.checkout.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CheckoutPaymentProvider
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T15:03:42.622Z")
public class CheckoutPaymentProvider {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("redirect_url")
  private String redirectUrl = null;

  @JsonProperty("image_url")
  private String imageUrl = null;

  @JsonProperty("fee")
  private Long fee = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("countries")
  private List<String> countries = null;

  @JsonProperty("label")
  private String label = null;

  public CheckoutPaymentProvider name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the payment provider. (max 255 characters)
   * @return name
  **/
  @ApiModelProperty(example = "PayhereUs", required = true, value = "The name of the payment provider. (max 255 characters)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CheckoutPaymentProvider redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * URL to redirect to. (must be https, min 7, max 2000 characters)
   * @return redirectUrl
  **/
  @ApiModelProperty(example = "https://www.example.com/us/start", required = true, value = "URL to redirect to. (must be https, min 7, max 2000 characters)")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public CheckoutPaymentProvider imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * URL to an image to display. (must be https, max 2000 characters)
   * @return imageUrl
  **/
  @ApiModelProperty(example = "https://www.exampleobjects.com/logo.png", value = "URL to an image to display. (must be https, max 2000 characters)")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public CheckoutPaymentProvider fee(Long fee) {
    this.fee = fee;
    return this;
  }

   /**
   * Minor units. Includes tax.
   * @return fee
  **/
  @ApiModelProperty(value = "Minor units. Includes tax.")
  public Long getFee() {
    return fee;
  }

  public void setFee(Long fee) {
    this.fee = fee;
  }

  public CheckoutPaymentProvider description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description. (max 500 characters)
   * @return description
  **/
  @ApiModelProperty(example = "an American company operating a worldwide online payments system", value = "Description. (max 500 characters)")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CheckoutPaymentProvider countries(List<String> countries) {
    this.countries = countries;
    return this;
  }

  public CheckoutPaymentProvider addCountriesItem(String countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<String>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * If specified, limits the method to the listed countries (alpha 2 codes).
   * @return countries
  **/
  @ApiModelProperty(example = "[\"us\",\"gb\"]", value = "If specified, limits the method to the listed countries (alpha 2 codes).")
  public List<String> getCountries() {
    return countries;
  }

  public void setCountries(List<String> countries) {
    this.countries = countries;
  }

  public CheckoutPaymentProvider label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Controls label of buy button&lt;ul&gt;&lt;li&gt;continue&lt;/li&gt;&lt;li&gt;complete&lt;/li&gt;&lt;/ul&gt;
   * @return label
  **/
  @ApiModelProperty(example = "continue", value = "Controls label of buy button<ul><li>continue</li><li>complete</li></ul>")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckoutPaymentProvider paymentProvider = (CheckoutPaymentProvider) o;
    return Objects.equals(this.name, paymentProvider.name) &&
        Objects.equals(this.redirectUrl, paymentProvider.redirectUrl) &&
        Objects.equals(this.imageUrl, paymentProvider.imageUrl) &&
        Objects.equals(this.fee, paymentProvider.fee) &&
        Objects.equals(this.description, paymentProvider.description) &&
        Objects.equals(this.countries, paymentProvider.countries) &&
        Objects.equals(this.label, paymentProvider.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, redirectUrl, imageUrl, fee, description, countries, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckoutPaymentProvider {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

