/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.checkout.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * CheckoutAggregatedOrderCartItemV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T15:03:42.622Z")
public class CheckoutAggregatedOrderCartItemV2 {
  @JsonProperty("type")
  private String type = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("quantity")
  private Long quantity = null;

  @JsonProperty("reference")
  private String reference = null;

  @JsonProperty("discount_rate")
  private Long discountRate = null;

  @JsonProperty("tax_rate")
  private Long taxRate = null;

  @JsonProperty("unit_price")
  private Long unitPrice = null;

  @JsonProperty("merchant_item_data")
  private String merchantItemData = null;

  @JsonProperty("total_price_including_tax")
  private Long totalPriceIncludingTax = null;

  @JsonProperty("total_tax_amount")
  private Long totalTaxAmount = null;

  @JsonProperty("total_price_excluding_tax")
  private Long totalPriceExcludingTax = null;

  @JsonProperty("image_uri")
  private String imageUri = null;

  public CheckoutAggregatedOrderCartItemV2 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CheckoutAggregatedOrderCartItemV2 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CheckoutAggregatedOrderCartItemV2 quantity(Long quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * minimum: 0
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Long getQuantity() {
    return quantity;
  }

  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }

  public CheckoutAggregatedOrderCartItemV2 reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public CheckoutAggregatedOrderCartItemV2 discountRate(Long discountRate) {
    this.discountRate = discountRate;
    return this;
  }

   /**
   * Get discountRate
   * @return discountRate
  **/
  @ApiModelProperty(value = "")
  public Long getDiscountRate() {
    return discountRate;
  }

  public void setDiscountRate(Long discountRate) {
    this.discountRate = discountRate;
  }

  public CheckoutAggregatedOrderCartItemV2 taxRate(Long taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Get taxRate
   * maximum: 10000
   * @return taxRate
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getTaxRate() {
    return taxRate;
  }

  public void setTaxRate(Long taxRate) {
    this.taxRate = taxRate;
  }

  public CheckoutAggregatedOrderCartItemV2 unitPrice(Long unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Long unitPrice) {
    this.unitPrice = unitPrice;
  }

  public CheckoutAggregatedOrderCartItemV2 merchantItemData(String merchantItemData) {
    this.merchantItemData = merchantItemData;
    return this;
  }

   /**
   * Get merchantItemData
   * @return merchantItemData
  **/
  @ApiModelProperty(value = "")
  public String getMerchantItemData() {
    return merchantItemData;
  }

  public void setMerchantItemData(String merchantItemData) {
    this.merchantItemData = merchantItemData;
  }

  public CheckoutAggregatedOrderCartItemV2 totalPriceIncludingTax(Long totalPriceIncludingTax) {
    this.totalPriceIncludingTax = totalPriceIncludingTax;
    return this;
  }

   /**
   * Get totalPriceIncludingTax
   * @return totalPriceIncludingTax
  **/
  @ApiModelProperty(value = "")
  public Long getTotalPriceIncludingTax() {
    return totalPriceIncludingTax;
  }

  public void setTotalPriceIncludingTax(Long totalPriceIncludingTax) {
    this.totalPriceIncludingTax = totalPriceIncludingTax;
  }

  public CheckoutAggregatedOrderCartItemV2 totalTaxAmount(Long totalTaxAmount) {
    this.totalTaxAmount = totalTaxAmount;
    return this;
  }

   /**
   * Get totalTaxAmount
   * @return totalTaxAmount
  **/
  @ApiModelProperty(value = "")
  public Long getTotalTaxAmount() {
    return totalTaxAmount;
  }

  public void setTotalTaxAmount(Long totalTaxAmount) {
    this.totalTaxAmount = totalTaxAmount;
  }

  public CheckoutAggregatedOrderCartItemV2 totalPriceExcludingTax(Long totalPriceExcludingTax) {
    this.totalPriceExcludingTax = totalPriceExcludingTax;
    return this;
  }

   /**
   * Get totalPriceExcludingTax
   * @return totalPriceExcludingTax
  **/
  @ApiModelProperty(value = "")
  public Long getTotalPriceExcludingTax() {
    return totalPriceExcludingTax;
  }

  public void setTotalPriceExcludingTax(Long totalPriceExcludingTax) {
    this.totalPriceExcludingTax = totalPriceExcludingTax;
  }

  public CheckoutAggregatedOrderCartItemV2 imageUri(String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

   /**
   * Get imageUri
   * @return imageUri
  **/
  @ApiModelProperty(value = "")
  public String getImageUri() {
    return imageUri;
  }

  public void setImageUri(String imageUri) {
    this.imageUri = imageUri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckoutAggregatedOrderCartItemV2 aggregatedOrderCartItemV2 = (CheckoutAggregatedOrderCartItemV2) o;
    return Objects.equals(this.type, aggregatedOrderCartItemV2.type) &&
        Objects.equals(this.name, aggregatedOrderCartItemV2.name) &&
        Objects.equals(this.quantity, aggregatedOrderCartItemV2.quantity) &&
        Objects.equals(this.reference, aggregatedOrderCartItemV2.reference) &&
        Objects.equals(this.discountRate, aggregatedOrderCartItemV2.discountRate) &&
        Objects.equals(this.taxRate, aggregatedOrderCartItemV2.taxRate) &&
        Objects.equals(this.unitPrice, aggregatedOrderCartItemV2.unitPrice) &&
        Objects.equals(this.merchantItemData, aggregatedOrderCartItemV2.merchantItemData) &&
        Objects.equals(this.totalPriceIncludingTax, aggregatedOrderCartItemV2.totalPriceIncludingTax) &&
        Objects.equals(this.totalTaxAmount, aggregatedOrderCartItemV2.totalTaxAmount) &&
        Objects.equals(this.totalPriceExcludingTax, aggregatedOrderCartItemV2.totalPriceExcludingTax) &&
        Objects.equals(this.imageUri, aggregatedOrderCartItemV2.imageUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, quantity, reference, discountRate, taxRate, unitPrice, merchantItemData, totalPriceIncludingTax, totalTaxAmount, totalPriceExcludingTax, imageUri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckoutAggregatedOrderCartItemV2 {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    discountRate: ").append(toIndentedString(discountRate)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    merchantItemData: ").append(toIndentedString(merchantItemData)).append("\n");
    sb.append("    totalPriceIncludingTax: ").append(toIndentedString(totalPriceIncludingTax)).append("\n");
    sb.append("    totalTaxAmount: ").append(toIndentedString(totalTaxAmount)).append("\n");
    sb.append("    totalPriceExcludingTax: ").append(toIndentedString(totalPriceExcludingTax)).append("\n");
    sb.append("    imageUri: ").append(toIndentedString(imageUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

