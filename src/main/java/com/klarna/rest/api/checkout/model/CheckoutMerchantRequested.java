/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.klarna.rest.api.checkout.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.klarna.rest.api.checkout.model.CheckoutMerchantRequestedCheckbox;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * CheckoutMerchantRequested
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-02T15:03:42.622Z")
public class CheckoutMerchantRequested {
  @JsonProperty("additional_checkbox")
  private Boolean additionalCheckbox = false;

  @JsonProperty("additional_checkboxes")
  private List<CheckoutMerchantRequestedCheckbox> additionalCheckboxes = null;

   /**
   * Informs whether the additional_checkbox is checked or not, when applicable.
   * @return additionalCheckbox
  **/
  @ApiModelProperty(value = "Informs whether the additional_checkbox is checked or not, when applicable.")
  public Boolean isAdditionalCheckbox() {
    return additionalCheckbox;
  }

   /**
   * Informs whether the additional_checkboxes is checked or not, when applicable.
   * @return additionalCheckboxes
  **/
  @ApiModelProperty(value = "Informs whether the additional_checkboxes is checked or not, when applicable.")
  public List<CheckoutMerchantRequestedCheckbox> getAdditionalCheckboxes() {
    return additionalCheckboxes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckoutMerchantRequested merchantRequested = (CheckoutMerchantRequested) o;
    return Objects.equals(this.additionalCheckbox, merchantRequested.additionalCheckbox) &&
        Objects.equals(this.additionalCheckboxes, merchantRequested.additionalCheckboxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalCheckbox, additionalCheckboxes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckoutMerchantRequested {\n");
    
    sb.append("    additionalCheckbox: ").append(toIndentedString(additionalCheckbox)).append("\n");
    sb.append("    additionalCheckboxes: ").append(toIndentedString(additionalCheckboxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

